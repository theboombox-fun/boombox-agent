export const claimABI = [
  {
    inputs: [
      { internalType: "address", name: "locker_", type: "address" },
      { internalType: "address", name: "uniswapV3Factory_", type: "address" },
      { internalType: "address", name: "positionManager_", type: "address" },
      { internalType: "address", name: "swapRouter_", type: "address" },
      { internalType: "address", name: "owner_", type: "address" },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "Invalid", type: "error" },
  { inputs: [], name: "NotFound", type: "error" },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  { inputs: [], name: "Unauthorized", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      { indexed: false, internalType: "uint256", name: "fid", type: "uint256" },
      { indexed: false, internalType: "string", name: "name", type: "string" },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "castHash",
        type: "string",
      },
    ],
    name: "TokenCreated",
    type: "event",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "admins",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "token", type: "address" }],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "string", name: "_name", type: "string" },
          { internalType: "string", name: "_symbol", type: "string" },
          { internalType: "uint256", name: "_supply", type: "uint256" },
          { internalType: "uint24", name: "_fee", type: "uint24" },
          { internalType: "bytes32", name: "_salt", type: "bytes32" },
          { internalType: "address", name: "_deployer", type: "address" },
          { internalType: "uint256", name: "_fid", type: "uint256" },
          { internalType: "string", name: "_image", type: "string" },
          { internalType: "string", name: "_castHash", type: "string" },
          {
            components: [
              { internalType: "int24", name: "tick", type: "int24" },
              { internalType: "address", name: "pairedToken", type: "address" },
              { internalType: "uint24", name: "devBuyFee", type: "uint24" },
            ],
            internalType: "struct Clanker.PoolConfig",
            name: "_poolConfig",
            type: "tuple",
          },
        ],
        internalType: "struct Clanker.PreSaleTokenConfig",
        name: "preSaleTokenConfig",
        type: "tuple",
      },
    ],
    name: "deployToken",
    outputs: [
      { internalType: "address", name: "token", type: "address" },
      { internalType: "uint256", name: "positionId", type: "uint256" },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "string", name: "_name", type: "string" },
          { internalType: "string", name: "_symbol", type: "string" },
          { internalType: "uint256", name: "_supply", type: "uint256" },
          { internalType: "uint24", name: "_fee", type: "uint24" },
          { internalType: "bytes32", name: "_salt", type: "bytes32" },
          { internalType: "address", name: "_deployer", type: "address" },
          { internalType: "uint256", name: "_fid", type: "uint256" },
          { internalType: "string", name: "_image", type: "string" },
          { internalType: "string", name: "_castHash", type: "string" },
          {
            components: [
              { internalType: "int24", name: "tick", type: "int24" },
              { internalType: "address", name: "pairedToken", type: "address" },
              { internalType: "uint24", name: "devBuyFee", type: "uint24" },
            ],
            internalType: "struct Clanker.PoolConfig",
            name: "_poolConfig",
            type: "tuple",
          },
        ],
        internalType: "struct Clanker.PreSaleTokenConfig",
        name: "preSaleTokenConfig",
        type: "tuple",
      },
      { internalType: "uint256", name: "preSaleId", type: "uint256" },
      {
        components: [
          { internalType: "uint256", name: "bpsBought", type: "uint256" },
          { internalType: "address", name: "user", type: "address" },
        ],
        internalType: "struct Clanker.PreSalePurchase[]",
        name: "preSalePurchases",
        type: "tuple[]",
      },
      {
        components: [
          { internalType: "uint256", name: "bpsAvailable", type: "uint256" },
          { internalType: "uint256", name: "ethPerBps", type: "uint256" },
          { internalType: "uint256", name: "endTime", type: "uint256" },
          { internalType: "uint256", name: "bpsSold", type: "uint256" },
          { internalType: "address", name: "tokenAddress", type: "address" },
        ],
        internalType: "struct Clanker.PreSaleConfig",
        name: "preSaleConfig",
        type: "tuple",
      },
    ],
    name: "deployToken",
    outputs: [
      { internalType: "address", name: "token", type: "address" },
      { internalType: "uint256", name: "positionId", type: "uint256" },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "deploymentInfoForToken",
    outputs: [
      { internalType: "address", name: "token", type: "address" },
      { internalType: "uint256", name: "positionId", type: "uint256" },
      { internalType: "address", name: "locker", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "user", type: "address" }],
    name: "getTokensDeployedByUser",
    outputs: [
      {
        components: [
          { internalType: "address", name: "token", type: "address" },
          { internalType: "uint256", name: "positionId", type: "uint256" },
          { internalType: "address", name: "locker", type: "address" },
        ],
        internalType: "struct Clanker.DeploymentInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityLocker",
    outputs: [
      { internalType: "contract ILpLockerv2", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "admin", type: "address" },
      { internalType: "bool", name: "isAdmin", type: "bool" },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "", type: "address" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    name: "tokensDeployedByUsers",
    outputs: [
      { internalType: "address", name: "token", type: "address" },
      { internalType: "uint256", name: "positionId", type: "uint256" },
      { internalType: "address", name: "locker", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV3Factory",
    outputs: [
      { internalType: "contract IUniswapV3Factory", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newLocker", type: "address" }],
    name: "updateLiquidityLocker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
];
